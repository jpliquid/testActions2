<launch>
  <arg name="uuv_name" />
  <arg name="start_time" default="-1"/>
  <arg name="radius" default="8"/>
  <arg name="center_x" default="4"/>
  <arg name="center_y" default="2"/>
  <arg name="center_z" default="-22"/>
  <arg name="n_points" default="50"/>
  <!-- Heading offset given in degrees -->
  <arg name="heading_offset" default="0"/>
  <arg name="duration" default="0"/>
  <arg name="max_forward_speed" default="0.3"/>

  <group>
    <push-ros-namespace namespace="$(var uuv_name)"/>
    <node pkg="uuv_control_utils"
      exec="start_circular_trajectory.py"
      node-name="start_circular_trajectory"
      output="screen">
      <param name="starting_time" value="$(var starting_time"/>
      <param name="radius" value="$(var radius"/>
      <param name="center" value="$(var center_x), $(var center_y), $(var center_z)" sep-value=", "/>
      <param name="n_points" value="$(var n_points"/>
      <param name="heading_offset" value="$(var heading_offset"/>
      <param name="duration" value="$(var duration"/>
      <param name="max_forward_speed" value="$(var max_forward_speed"/>
      <!-- <rosparam subst_value="true">
        start_time: $(arg start_time)
        radius: $(arg radius)
        center:
          - $(arg center_x)
          - $(arg center_y)
          - $(arg center_z)
        n_points: $(arg n_points)
        heading_offset: $(arg heading_offset)
        duration: $(arg duration)
        max_forward_speed: $(arg max_forward_speed)
      </rosparam> -->
    </node>
  </group>
</launch>
